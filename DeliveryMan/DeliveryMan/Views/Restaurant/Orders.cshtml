@model DeliveryMan.Models.RestaurantOrdersViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Orders</title>
</head>
<body>
    <br />
    <p>
        <input type="button" value="Create A New Order" class="btn btn-danger"
               onclick="location.href = '@(Url.Action("CreateOrder", "Restaurant"))'" />
    </p>
    <table class="table">
        <tr>
            <th>
                Note
            </th>
            <th>
                Destination
            </th>
            <th>
                Deliveryman
            </th>
            <th>
                ETA
            </th>
            <th>
                DeliveryFee
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Note)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PlacedTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PickUpTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeliveredTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ETA)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeliveryFee)
                </th>*@
            <th></th>
        </tr>

        Waiting Orders
        @foreach (var item in Model.WaitingOrders.ToList())
        {
            string destination = item.Contact.AddressToString();
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @destination
                </td>
                <td>
                    @if (item.Deliveryman != null)
                    {
                        @Html.DisplayFor(modelItem => item.Deliveryman.FirstName + " " + item.Deliveryman.LastName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ETA)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryFee)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PlacedTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PickUpTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveredTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ETA)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryFee)
                    </td>*@
                <td>
                    <input type="button" value="Edit" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("EditOrder", "Restaurant", new { id = item.Id }))'" />
                    <input type="button" value="Details" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("OrderDetails", "Restaurant", new { id = item.Id }))'" />
                    <input type="button" value="Cancel" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("CancelOrder", "Restaurant", new { id = item.Id }))'" />
                </td>
            </tr>
        }
        Pending Orders
        @foreach (var item in Model.PendingOrders.ToList())
        {
            string destination = item.Contact.AddressToString();
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @destination
                </td>
                <td>
                    @{
                        if (item.Deliveryman != null)
                        {
                            string res = item.Deliveryman.getName();
                            @res
                        }
                    }
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ETA)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryFee)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PlacedTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PickUpTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveredTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ETA)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryFee)
                    </td>*@
                <td>
                    <input type="button" value="Edit" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("EditOrder", "Restaurant", new { id = item.Id }))'" />
                    <input type="button" value="Details" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("OrderDetails", "Restaurant", new { id = item.Id }))'" />
                    <input type="button" value="Cancel" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("CancelOrder", "Restaurant", new { id = item.Id }))'" />
                </td>
            </tr>
        }
        InProgress Orders
        @foreach (var item in Model.InProgressOrders.ToList())
        {
            string destination = item.Contact.AddressToString();
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @destination
                </td>
                <td>
                    @if (item.Deliveryman != null)
                    {
                        @Html.DisplayFor(modelItem => item.Deliveryman.FirstName + " " + item.Deliveryman.LastName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ETA)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeliveryFee)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PlacedTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PickUpTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveredTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ETA)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryFee)
                    </td>*@
                <td>
                    <input type="button" value="Edit" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("EditOrder", "Restaurant", new { id = item.Id }))'" />
                    <input type="button" value="Details" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("OrderDetails", "Restaurant", new { id = item.Id }))'" />
                    <input type="button" value="Cancel" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("CancelOrder", "Restaurant", new { id = item.Id }))'" />
                </td>
            </tr>
        }
    </table>
</body>
</html>
