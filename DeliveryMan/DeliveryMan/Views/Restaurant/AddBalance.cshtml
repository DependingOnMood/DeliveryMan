@model DeliveryMan.Models.RestaurantAddBalanceViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add Balance</title>
</head>
<body>
    @using (Html.BeginForm("AddBalance", "Restaurant", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Add balance.</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.RestaurantId)
    
            <div class="form-group">
                @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-danger" />
                    <input type="button" value="Back to Orders" class="btn btn-danger"
                           onclick="location.href = '@(Url.Action("Orders", "Restaurant"))'" />
                </div>
            </div>
        </div>
    }
    

</body>
</html>
