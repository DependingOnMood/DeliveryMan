@model DataLayer.Order

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Order Details</title>
</head>
<body>
    <div>
        <h4>Order details.</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Note)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Note)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Contact.AddressLine1)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Contact.AddressLine1)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Contact.AddressLine2)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Contact.AddressLine2)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Contact.City)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Contact.City)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Contact.State)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Contact.State)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Contact.ZipCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Contact.ZipCode)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Contact.PhoneNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Contact.PhoneNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PlacedTime)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PlacedTime)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PickUpTime)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PickUpTime)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DeliveredTime)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DeliveredTime)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Status)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Status)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ETA)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ETA)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DeliveryFee)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DeliveryFee)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Deliveryman)
            </dt>

            <dd>
                @if (Model.Deliveryman != null)
                {
                    string name = Model.Deliveryman.getName();
                    @name
                }
            </dd>
        </dl>
    </div>
    <p>
        <input type="button" value="My Orders" class="btn btn-danger"
               onclick="location.href = '@(Url.Action("MyOrders", "Deliveryman"))'" />
        <input type="button" value="Direction" class="btn btn-danger"
               onclick="location.href = '@(Url.Action("Direction", "Deliveryman", new { s1 = Model.Restaurant.Contact.AddressToString(), s2 = Model.Contact.AddressToString() }))'" />
    </p>
</body>
</html>
